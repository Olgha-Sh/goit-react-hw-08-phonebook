{"version":3,"sources":["components/PageTitle/PageTitle.module.css","components/PageTitle/PageTitle.js","components/FormWrap/FormWrap.module.css","components/FormWrap/FormWrap.js","../node_modules/@material-ui/core/esm/ClickAwayListener/ClickAwayListener.js","../node_modules/@material-ui/core/esm/SnackbarContent/SnackbarContent.js","../node_modules/@material-ui/core/esm/Snackbar/Snackbar.js","components/Notification/Notification.js","views/LoginView.js"],"names":["module","exports","useStyles","makeStyles","theme","root","breakpoints","down","fontSize","PageTitle","title","classes","CSSTransition","in","appear","timeout","classNames","styles","unmountOnExit","Typography","className","variant","color","FormWrap","children","Box","maxWidth","mapEventPropToEvent","eventProp","substring","toLowerCase","ClickAwayListener","props","_props$disableReactTr","disableReactTree","_props$mouseEvent","mouseEvent","onClickAway","_props$touchEvent","touchEvent","movedRef","React","nodeRef","mountedRef","syntheticEventRef","current","handleOwnRef","instance","ReactDOM","handleRef","useForkRef","ref","handleClickAway","useEventCallback","event","insideReactTree","document","documentElement","clientWidth","clientX","clientHeight","clientY","clickedRootScrollbar","insideDOM","composedPath","indexOf","ownerDocument","contains","target","createHandleSynthetic","handlerName","childrenPropsHandler","childrenProps","mappedTouchEvent","doc","handleTouchMove","addEventListener","removeEventListener","mappedMouseEvent","SnackbarContent","action","message","_props$role","role","other","_objectWithoutProperties","Paper","_extends","square","elevation","clsx","withStyles","emphasis","palette","type","backgroundColor","emphasize","background","default","typography","body2","_defineProperty","getContrastText","display","alignItems","flexWrap","padding","borderRadius","shape","flexGrow","up","minWidth","marginLeft","paddingLeft","marginRight","name","Snackbar","_props$anchorOrigin","anchorOrigin","vertical","horizontal","_props$autoHideDurati","autoHideDuration","ClickAwayListenerProps","ContentProps","_props$disableWindowB","disableWindowBlurListener","onClose","onEnter","onEntered","onEntering","onExit","onExited","onExiting","onMouseEnter","onMouseLeave","open","resumeHideDuration","_props$TransitionComp","TransitionComponent","Grow","_props$transitionDura","transitionDuration","enter","duration","enteringScreen","exit","leavingScreen","TransitionProps","timerAutoHide","_React$useState","exited","setExited","handleClose","apply","arguments","setAutoHideTimer","autoHideDurationParam","clearTimeout","setTimeout","handlePause","handleResume","window","concat","capitalize","createChainedFunction","direction","top1","top","bottom1","bottom","right","justifyContent","left","top3","bottom3","right3","left3","center","transform","zIndex","snackbar","position","anchorOriginTopCenter","anchorOriginBottomCenter","anchorOriginTopRight","anchorOriginBottomRight","anchorOriginTopLeft","anchorOriginBottomLeft","flip","Notification","severity","defaultProps","LoginView","state","email","password","handleChange","value","setState","handleSubmit","e","preventDefault","onLogin","this","error","hideError","Boolean","onSubmit","id","label","fullWidth","onChange","required","margin","Component","mapDispatchToprops","authOperations","logIn","authActions","clearError","connect","authSelectors","getError"],"mappings":"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","file":"static/js/6.0085177a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"PageTitle_appear__3F2au\",\"appearActive\":\"PageTitle_appearActive__2NM_j\"};","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './PageTitle.module.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: 36\r\n    }\r\n  }\r\n}));\r\n\r\nconst PageTitle = ({ title }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CSSTransition\r\n      in={true}\r\n      appear={true}\r\n      timeout={500}\r\n      classNames={styles}\r\n      unmountOnExit\r\n    >\r\n\r\n      <Typography className={classes.root} variant=\"h2\" color=\"primary\">{title}</Typography>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nPageTitle.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n};\r\n\r\nexport default PageTitle;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"FormWrap_appear__2FRDh\",\"appearActive\":\"FormWrap_appearActive__UQPoU\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport styles from './FormWrap.module.css'\r\n\r\nconst FormWrap = ({ children }) => {\r\n\r\n  return (\r\n    <CSSTransition\r\n      in={true}\r\n      appear={true}\r\n      timeout={800}\r\n      classNames={styles}\r\n      unmountOnExit\r\n    >\r\n      <Box maxWidth={300}>\r\n        {children}\r\n      </Box>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nFormWrap.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default FormWrap;","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport ownerDocument from '../utils/ownerDocument';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport { elementAcceptingRef, exactProp } from '@material-ui/utils';\n\nfunction mapEventPropToEvent(eventProp) {\n  return eventProp.substring(2).toLowerCase();\n}\n\nfunction clickedRootScrollbar(event) {\n  return document.documentElement.clientWidth < event.clientX || document.documentElement.clientHeight < event.clientY;\n}\n/**\n * Listen for click events that occur somewhere in the document, outside of the element itself.\n * For instance, if you need to hide a menu when people click anywhere else on your page.\n */\n\n\nfunction ClickAwayListener(props) {\n  var children = props.children,\n      _props$disableReactTr = props.disableReactTree,\n      disableReactTree = _props$disableReactTr === void 0 ? false : _props$disableReactTr,\n      _props$mouseEvent = props.mouseEvent,\n      mouseEvent = _props$mouseEvent === void 0 ? 'onClick' : _props$mouseEvent,\n      onClickAway = props.onClickAway,\n      _props$touchEvent = props.touchEvent,\n      touchEvent = _props$touchEvent === void 0 ? 'onTouchEnd' : _props$touchEvent;\n  var movedRef = React.useRef(false);\n  var nodeRef = React.useRef(null);\n  var mountedRef = React.useRef(false);\n  var syntheticEventRef = React.useRef(false);\n  React.useEffect(function () {\n    mountedRef.current = true;\n    return function () {\n      mountedRef.current = false;\n    };\n  }, []); // can be removed once we drop support for non ref forwarding class components\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    nodeRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(children.ref, handleOwnRef); // The handler doesn't take event.defaultPrevented into account:\n  //\n  // event.preventDefault() is meant to stop default behaviours like\n  // clicking a checkbox to check it, hitting a button to submit a form,\n  // and hitting left arrow to move the cursor in a text input etc.\n  // Only special HTML elements have these default behaviors.\n\n  var handleClickAway = useEventCallback(function (event) {\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    var insideReactTree = syntheticEventRef.current;\n    syntheticEventRef.current = false; // 1. IE 11 support, which trigger the handleClickAway even after the unbind\n    // 2. The child might render null.\n    // 3. Behave like a blur listener.\n\n    if (!mountedRef.current || !nodeRef.current || clickedRootScrollbar(event)) {\n      return;\n    } // Do not act if user performed touchmove\n\n\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n\n    var insideDOM; // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\n\n    if (event.composedPath) {\n      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;\n    } else {\n      // TODO v6 remove dead logic https://caniuse.com/#search=composedPath.\n      var doc = ownerDocument(nodeRef.current);\n      insideDOM = !doc.documentElement.contains(event.target) || nodeRef.current.contains(event.target);\n    }\n\n    if (!insideDOM && (disableReactTree || !insideReactTree)) {\n      onClickAway(event);\n    }\n  }); // Keep track of mouse/touch events that bubbled up through the portal.\n\n  var createHandleSynthetic = function createHandleSynthetic(handlerName) {\n    return function (event) {\n      syntheticEventRef.current = true;\n      var childrenPropsHandler = children.props[handlerName];\n\n      if (childrenPropsHandler) {\n        childrenPropsHandler(event);\n      }\n    };\n  };\n\n  var childrenProps = {\n    ref: handleRef\n  };\n\n  if (touchEvent !== false) {\n    childrenProps[touchEvent] = createHandleSynthetic(touchEvent);\n  }\n\n  React.useEffect(function () {\n    if (touchEvent !== false) {\n      var mappedTouchEvent = mapEventPropToEvent(touchEvent);\n      var doc = ownerDocument(nodeRef.current);\n\n      var handleTouchMove = function handleTouchMove() {\n        movedRef.current = true;\n      };\n\n      doc.addEventListener(mappedTouchEvent, handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return function () {\n        doc.removeEventListener(mappedTouchEvent, handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n\n    return undefined;\n  }, [handleClickAway, touchEvent]);\n\n  if (mouseEvent !== false) {\n    childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);\n  }\n\n  React.useEffect(function () {\n    if (mouseEvent !== false) {\n      var mappedMouseEvent = mapEventPropToEvent(mouseEvent);\n      var doc = ownerDocument(nodeRef.current);\n      doc.addEventListener(mappedMouseEvent, handleClickAway);\n      return function () {\n        doc.removeEventListener(mappedMouseEvent, handleClickAway);\n      };\n    }\n\n    return undefined;\n  }, [handleClickAway, mouseEvent]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.cloneElement(children, childrenProps));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ClickAwayListener.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The wrapped element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * If `true`, the React tree is ignored and only the DOM tree is considered.\n   * This prop changes how portaled elements are handled.\n   */\n  disableReactTree: PropTypes.bool,\n\n  /**\n   * The mouse event to listen to. You can disable the listener by providing `false`.\n   */\n  mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', false]),\n\n  /**\n   * Callback fired when a \"click away\" event is detected.\n   */\n  onClickAway: PropTypes.func.isRequired,\n\n  /**\n   * The touch event to listen to. You can disable the listener by providing `false`.\n   */\n  touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  ClickAwayListener['propTypes' + ''] = exactProp(ClickAwayListener.propTypes);\n}\n\nexport default ClickAwayListener;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Paper from '../Paper';\nimport { emphasize } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  var emphasis = theme.palette.type === 'light' ? 0.8 : 0.98;\n  var backgroundColor = emphasize(theme.palette.background.default, emphasis);\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, _defineProperty({\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor: backgroundColor,\n      display: 'flex',\n      alignItems: 'center',\n      flexWrap: 'wrap',\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      flexGrow: 1\n    }, theme.breakpoints.up('sm'), {\n      flexGrow: 'initial',\n      minWidth: 288\n    })),\n\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: '8px 0'\n    },\n\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: 'auto',\n      paddingLeft: 16,\n      marginRight: -8\n    }\n  };\n};\nvar SnackbarContent = /*#__PURE__*/React.forwardRef(function SnackbarContent(props, ref) {\n  var action = props.action,\n      classes = props.classes,\n      className = props.className,\n      message = props.message,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'alert' : _props$role,\n      other = _objectWithoutProperties(props, [\"action\", \"classes\", \"className\", \"message\", \"role\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    role: role,\n    square: true,\n    elevation: 6,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.message\n  }, message), action ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? SnackbarContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * The ARIA role attribute of the element.\n   */\n  role: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSnackbarContent'\n})(SnackbarContent);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { duration } from '../styles/transitions';\nimport ClickAwayListener from '../ClickAwayListener';\nimport useEventCallback from '../utils/useEventCallback';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nexport var styles = function styles(theme) {\n  var top1 = {\n    top: 8\n  };\n  var bottom1 = {\n    bottom: 8\n  };\n  var right = {\n    justifyContent: 'flex-end'\n  };\n  var left = {\n    justifyContent: 'flex-start'\n  };\n  var top3 = {\n    top: 24\n  };\n  var bottom3 = {\n    bottom: 24\n  };\n  var right3 = {\n    right: 24\n  };\n  var left3 = {\n    left: 24\n  };\n  var center = {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      zIndex: theme.zIndex.snackbar,\n      position: 'fixed',\n      display: 'flex',\n      left: 8,\n      right: 8,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'center' }}`. */\n    anchorOriginTopCenter: _extends({}, top1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, top3, center))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'center' }}`. */\n    anchorOriginBottomCenter: _extends({}, bottom1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, bottom3, center))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }}`. */\n    anchorOriginTopRight: _extends({}, top1, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, top3, right3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }}`. */\n    anchorOriginBottomRight: _extends({}, bottom1, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, bottom3, right3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }}`. */\n    anchorOriginTopLeft: _extends({}, top1, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, top3, left3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }}`. */\n    anchorOriginBottomLeft: _extends({}, bottom1, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, bottom3, left3)))\n  };\n};\nvar Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(props, ref) {\n  var action = props.action,\n      _props$anchorOrigin = props.anchorOrigin;\n  _props$anchorOrigin = _props$anchorOrigin === void 0 ? {\n    vertical: 'bottom',\n    horizontal: 'center'\n  } : _props$anchorOrigin;\n\n  var vertical = _props$anchorOrigin.vertical,\n      horizontal = _props$anchorOrigin.horizontal,\n      _props$autoHideDurati = props.autoHideDuration,\n      autoHideDuration = _props$autoHideDurati === void 0 ? null : _props$autoHideDurati,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      ClickAwayListenerProps = props.ClickAwayListenerProps,\n      ContentProps = props.ContentProps,\n      _props$disableWindowB = props.disableWindowBlurListener,\n      disableWindowBlurListener = _props$disableWindowB === void 0 ? false : _props$disableWindowB,\n      message = props.message,\n      onClose = props.onClose,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      onMouseEnter = props.onMouseEnter,\n      onMouseLeave = props.onMouseLeave,\n      open = props.open,\n      resumeHideDuration = props.resumeHideDuration,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Grow : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n  } : _props$transitionDura,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"classes\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onClose\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"]);\n\n  var timerAutoHide = React.useRef();\n\n  var _React$useState = React.useState(true),\n      exited = _React$useState[0],\n      setExited = _React$useState[1];\n\n  var handleClose = useEventCallback(function () {\n    if (onClose) {\n      onClose.apply(void 0, arguments);\n    }\n  });\n  var setAutoHideTimer = useEventCallback(function (autoHideDurationParam) {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(function () {\n      handleClose(null, 'timeout');\n    }, autoHideDurationParam);\n  });\n  React.useEffect(function () {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n\n    return function () {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]); // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n\n  var handlePause = function handlePause() {\n    clearTimeout(timerAutoHide.current);\n  }; // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n\n\n  var handleResume = React.useCallback(function () {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n\n  var handleMouseEnter = function handleMouseEnter(event) {\n    if (onMouseEnter) {\n      onMouseEnter(event);\n    }\n\n    handlePause();\n  };\n\n  var handleMouseLeave = function handleMouseLeave(event) {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    handleResume();\n  };\n\n  var handleClickAway = function handleClickAway(event) {\n    if (onClose) {\n      onClose(event, 'clickaway');\n    }\n  };\n\n  var handleExited = function handleExited() {\n    setExited(true);\n  };\n\n  var handleEnter = function handleEnter() {\n    setExited(false);\n  };\n\n  React.useEffect(function () {\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return function () {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]); // So we only render active snackbars.\n\n  if (!open && exited) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(ClickAwayListener, _extends({\n    onClickAway: handleClickAway\n  }, ClickAwayListenerProps), /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"anchorOrigin\".concat(capitalize(vertical)).concat(capitalize(horizontal))], className),\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    onEnter: createChainedFunction(handleEnter, onEnter),\n    onEntered: onEntered,\n    onEntering: onEntering,\n    onExit: onExit,\n    onExited: createChainedFunction(handleExited, onExited),\n    onExiting: onExiting,\n    timeout: transitionDuration,\n    direction: vertical === 'top' ? 'down' : 'up'\n  }, TransitionProps), children || /*#__PURE__*/React.createElement(SnackbarContent, _extends({\n    message: message,\n    action: action\n  }, ContentProps)))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The anchor of the `Snackbar`.\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   */\n  autoHideDuration: PropTypes.number,\n\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`SnackbarContent`](/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   */\n  disableWindowBlurListener: PropTypes.bool,\n\n  /**\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\n   * features such as autoHideDuration may be canceled.\n   */\n  key: PropTypes.any,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired before the transition is entering.\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired when the transition has entered.\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired when the transition is entering.\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired before the transition is exiting.\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired when the transition has exited.\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * Callback fired when the transition is exiting.\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * If `true`, `Snackbar` is open.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  flip: false,\n  name: 'MuiSnackbar'\n})(Snackbar);","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ open, type, message, handleClose }) => {\r\n  return (\r\n    <Snackbar\r\n      open={open}\r\n      onClose={handleClose}\r\n      autoHideDuration={3000}\r\n      anchorOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right'\r\n      }}\r\n    >\r\n      <MuiAlert elevation={6} variant=\"filled\" severity={type} onClose={handleClose}>{message}</MuiAlert>\r\n    </Snackbar>\r\n  )\r\n};\r\n\r\nNotification.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  type: PropTypes.oneOf(['error', 'warning', 'info', 'success']),\r\n  message: PropTypes.string.isRequired,\r\n  handleClose: PropTypes.func.isRequired\r\n};\r\n\r\nNotification.defaultProps = {\r\n  type: 'error'\r\n};\r\n\r\nexport default Notification;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport PageTitle from '../components/PageTitle';\r\nimport FormWrap from '../components/FormWrap';\r\nimport Notification from '../components/Notification';\r\nimport { authOperations, authSelectors } from '../redux/auth'\r\nimport authActions from '../redux/auth/authActions';\r\n\r\nclass LoginView extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    })\r\n\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onLogin({ ...this.state });\r\n    return this.setState({ email: '', password: '' });\r\n  };\r\n\r\n  render() {\r\n    const { email, password } = this.state;\r\n    const { error, hideError } = this.props;\r\n\r\n    return (\r\n      <>\r\n        {error && <Notification open={Boolean(error)} handleClose={hideError} type=\"warning\" message=\"Incorrect username or password\" />}\r\n        <PageTitle title=\"Login\" />\r\n        <FormWrap>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <TextField\r\n              id=\"email-field\"\r\n              label=\"Email\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={this.handleChange}\r\n              required\r\n              margin=\"normal\"\r\n            />\r\n            <TextField\r\n              id=\"password-field\"\r\n              label=\"Password\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={this.handleChange}\r\n              required\r\n              margin=\"normal\"\r\n            />\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n              Login\r\n            </Button>\r\n          </form>\r\n        </FormWrap>\r\n      </>\r\n    )\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  error: authSelectors.getError(state),\r\n});\r\n\r\nconst mapDispatchToprops = {\r\n  onLogin: authOperations.logIn,\r\n  hideError: authActions.clearError\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToprops)(LoginView);"],"sourceRoot":""}