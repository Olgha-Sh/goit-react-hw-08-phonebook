{"version":3,"sources":["context/ThemeContext.js","constants.js","components/hoc/withTheme.js","components/ThemeSwitch/ThemeSwitch.js","components/AuthorizationNav/AuthorizationNav.js","components/Navigation/Navigation.js","components/UserMenu/UserMenu.js","components/HeaderMenu/HeaderMenu.js","components/Layout/Layout.js","routes.js","components/PrivateRoute.js","components/PublicRoute.js","components/App.js","redux/phonebook/phonebookReducer.js","redux/store.js","index.js","redux/phonebook/phonebookActions.js","redux/auth/authOperations.js","redux/auth/authSelectors.js","utils/token.js","redux/auth/authReducer.js","components/Spinner/Spinner.js","redux/auth/authActions.js"],"names":["Context","createContext","ThemeContext","state","type","toggleTheme","bind","this","setState","Provider","value","props","children","Component","Consumer","withTheme","WrappedComponent","theme","myTheme","useStyles","makeStyles","root","position","top","right","zIndex","classes","className","Switch","checked","onChange","color","name","inputProps","link","marginRight","spacing","textDecoration","AuthorizationNav","to","exact","Button","variant","display","palette","common","white","activeLink","secondary","light","connect","isAuthenticated","authSelectors","activeClassName","UserMenu","isMenuOpen","anchorEl","handleManuOpen","e","currentTarget","handleManuClose","handleLogout","onLogout","email","aria-label","aria-haspopup","onClick","startIcon","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","getUserName","getUserEmail","authOperations","logOut","justifyContent","alignItems","AppBar","Toolbar","wrap","minHeight","padding","overflow","darkTheme","createMuiTheme","useTheme","ThemeProvider","CssBaseline","Container","maxWidth","Paper","square","path","label","component","lazy","private","restricted","routeProps","render","App","fallback","Spinner","routes","map","route","key","contacts","createReducer","phonebookActions","fetchContactsSuccess","action","payload","addContactSuccess","deleteContactSuccess","filter","id","changeFilter","loading","fetchContactsRequest","fetchContactsError","addContactRequest","addContactError","removeContactRequest","removeContactSuccess","removeContactError","error","hideError","combineReducers","authPersistConfig","storage","whitelist","store","configureStore","reducer","phonebook","phonebookReducer","auth","persistReducer","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","document","getElementById","createAction","deleteContactRequest","deleteContactError","axios","defaults","baseURL","register","credentials","dispatch","authActions","registerRequest","post","then","response","token","set","data","registerSuccess","catch","registerError","logoutRequest","unset","logoutSuccess","logoutError","logIn","loginRequest","loginSuccess","loginError","getCurrentUser","getState","persistedToken","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","user","getError","headers","Authorization","initialUserState","_","clearError","CircularProgress"],"mappings":"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","file":"static/js/main.2b0748d0.chunk.js","sourcesContent":["import React, { Component, createContext } from 'react';\r\nimport { LIGHT, DARK } from '../constants';\r\n\r\nconst Context = createContext();\r\n\r\nexport default class ThemeContext extends Component {\r\n  static Consumer = Context.Consumer;\r\n\r\n  toggleTheme() {\r\n    this.setState({\r\n      type: this.state.type === DARK ? LIGHT : DARK\r\n    });\r\n  };\r\n\r\n  state = {\r\n    type: 'light',\r\n    toggleTheme: this.toggleTheme.bind(this)\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    )\r\n  }\r\n}","export const LIGHT = 'light';\r\nexport const DARK = 'dark';","import React from 'react';\r\n\r\nimport ThemeContext from '../../context/ThemeContext';\r\n\r\nconst withTheme = WrappedComponent => {\r\n  return function WithTheme(props) {\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {theme => <WrappedComponent {...props} myTheme={theme} />}\r\n      </ThemeContext.Consumer>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withTheme;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nimport withTheme from '../hoc/withTheme';\r\nimport { LIGHT } from '../../constants';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    position: 'absolute',\r\n    top: 30,\r\n    right: 20,\r\n    zIndex: 1\r\n  }\r\n}));\r\n\r\nconst ThemeSwitch = ({ myTheme }) => {\r\n  const classes = useStyles();\r\n  const { type, toggleTheme } = myTheme;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Switch\r\n        checked={type === LIGHT}\r\n        onChange={toggleTheme}\r\n        color=\"primary\"\r\n        name=\"checkTheme\"\r\n        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n      />\r\n    </div>\r\n\r\n  )\r\n};\r\n\r\nexport default withTheme(ThemeSwitch);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  link: {\r\n    marginRight: theme.spacing(2),\r\n    textDecoration: 'none',\r\n    '&:last-of-type': {\r\n      marginRight: 0\r\n    }\r\n  },\r\n\r\n}));\r\n\r\nconst AuthorizationNav = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <NavLink\r\n        to=\"/register\"\r\n        exact\r\n        className={classes.link}\r\n      >\r\n        <Button variant=\"contained\" color=\"secondary\">Sign Up</Button>\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/login\"\r\n        exact\r\n        className={classes.link}\r\n      >\r\n        <Button variant=\"contained\">Log In</Button>\r\n      </NavLink>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default AuthorizationNav;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    color: theme.palette.common.white\r\n  },\r\n  activeLink: {\r\n    color: theme.palette.secondary.light\r\n  }\r\n}));\r\n\r\nconst Navigation = ({ isAuthenticated }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <nav>\r\n      <NavLink\r\n        to=\"/\"\r\n        exact\r\n        className={classes.link}\r\n        activeClassName={classes.activeLink}\r\n      >\r\n        <Button color=\"inherit\">Home</Button>\r\n      </NavLink>\r\n\r\n      {isAuthenticated && (\r\n        <NavLink\r\n          to=\"/contacts\"\r\n          exact\r\n          className={classes.link}\r\n          activeClassName={classes.activeLink}\r\n        >\r\n          <Button color=\"inherit\">Contacts</Button>\r\n        </NavLink>\r\n      )}\r\n    </nav>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\n\r\nclass UserMenu extends Component {\r\n  state = {\r\n    isMenuOpen: false,\r\n    anchorEl: null\r\n  }\r\n\r\n  handleManuOpen = e => {\r\n    return this.setState({\r\n      isMenuOpen: true,\r\n      anchorEl: e.currentTarget\r\n    })\r\n  }\r\n\r\n  handleManuClose = () => {\r\n    return this.setState({\r\n      isMenuOpen: false,\r\n      anchorEl: null\r\n    })\r\n  }\r\n\r\n  handleLogout = () => {\r\n    this.handleManuClose();\r\n    this.props.onLogout();\r\n  }\r\n\r\n  render() {\r\n    const { isMenuOpen, anchorEl } = this.state;\r\n    const { name, email } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          aria-label=\"account of current user\"\r\n          aria-haspopup=\"true\"\r\n          onClick={this.handleManuOpen}\r\n          color=\"inherit\"\r\n          startIcon={<AccountCircle />}\r\n        >\r\n          {name}\r\n        </Button>\r\n        <Menu\r\n          anchorEl={anchorEl}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n          keepMounted\r\n          transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n          open={isMenuOpen}\r\n          onClose={this.handleManuClose}\r\n        >\r\n          <MenuItem>{email}</MenuItem>\r\n          <MenuItem onClick={this.handleLogout}>Logout</MenuItem>\r\n        </Menu>\r\n      </>\r\n    )\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  name: authSelectors.getUserName(state),\r\n  email: authSelectors.getUserEmail(state)\r\n});\r\n\r\nexport default connect(mapStateToProps, { onLogout: authOperations.logOut })(UserMenu);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport AuthorizationNav from '../AuthorizationNav';\r\nimport Navigation from '../Navigation';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center'\r\n  }\r\n}));\r\n\r\nconst HeaderMenu = ({ isAuthenticated }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar className={classes.root}>\r\n        <Navigation />\r\n        {isAuthenticated ? <UserMenu /> : <AuthorizationNav />}\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(HeaderMenu);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles, ThemeProvider, useTheme, createMuiTheme } from '@material-ui/core/styles';\r\n\r\nimport ThemeSwitch from '../ThemeSwitch';\r\nimport withTheme from '../hoc/withTheme';\r\nimport { LIGHT } from '../../constants';\r\nimport HeaderMenu from '../HeaderMenu';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  wrap: {\r\n    position: 'relative',\r\n    minHeight: '100vh',\r\n    padding: theme.spacing(7, 5),\r\n    overflow: 'hidden'\r\n  }\r\n}));\r\n\r\nconst darkTheme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n  },\r\n});\r\n\r\nconst Layout = ({ children, myTheme }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <ThemeProvider theme={myTheme.type === LIGHT ? theme : darkTheme}>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"md\">\r\n        <HeaderMenu />\r\n        <Paper className={classes.wrap} square>\r\n          <ThemeSwitch />\r\n          {children}\r\n        </Paper>\r\n      </Container>\r\n    </ThemeProvider>\r\n  )\r\n};\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n}\r\n\r\n\r\nexport default withTheme(Layout);","import { lazy } from 'react';\r\n\r\nexport default [\r\n  {\r\n    path: '/',\r\n    label: 'Home',\r\n    exact: true,\r\n    component: lazy(() => import('./views/HomeView')),\r\n    private: false,\r\n    restricted: false,\r\n  },\r\n  {\r\n    path: '/register',\r\n    label: 'Register',\r\n    exact: true,\r\n    component: lazy(() => import('./views/RegisterView')),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: '/login',\r\n    label: 'Login',\r\n    exact: true,\r\n    component: lazy(() => import('./views/LoginView')),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: '/contacts',\r\n    label: 'Contacts',\r\n    exact: true,\r\n    component: lazy(() => import('./views/ContactsView')),\r\n    private: true,\r\n    restricted: false,\r\n  }\r\n]","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  ...routeProps\r\n}) => (\r\n    <Route\r\n      {...routeProps}\r\n      render={props =>\r\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }\r\n    />\r\n  );\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  ...routeProps\r\n}) => (\r\n    <Route\r\n      {...routeProps}\r\n      render={props =>\r\n        isAuthenticated && routeProps.restricted ? (\r\n          <Redirect to=\"/contacts\" />\r\n        ) : (\r\n            <Component {...props} />\r\n          )\r\n      }\r\n    />\r\n  );\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);","import React, { Suspense } from 'react';\nimport { BrowserRouter, Switch } from 'react-router-dom';\n\nimport ThemeContext from '../context/ThemeContext';\nimport Layout from './Layout/Layout';\nimport routes from '../routes';\nimport Spinner from './Spinner';\nimport PrivateRoute from './PrivateRoute';\nimport PublicRoute from './PublicRoute';\n\nimport '../index.css';\n\nconst App = () => {\n  return (\n    <ThemeContext>\n      <BrowserRouter>\n        <Layout>\n          <Suspense fallback={<Spinner />}>\n            <Switch>\n              {routes.map(route =>\n                route.private ? (\n                  <PrivateRoute key={route.label} {...route} />\n                ) : (\n                    <PublicRoute key={route.label} {...route} />\n                  ),\n              )}\n            </Switch>\n          </Suspense>\n        </Layout>\n      </BrowserRouter>\n    </ThemeContext>\n  )\n}\n\nexport default App;","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport phonebookActions from './phonebookActions';\r\n\r\n// functions\r\nconst addContact = (state, action) => {\r\n  return [...state, action.payload]\r\n}\r\n\r\nconst deleteContact = (state, action) => {\r\n  return state.filter(({ id }) => id !== action.payload);\r\n}\r\n\r\nconst changeFilter = (state, action) => {\r\n  return action.payload\r\n}\r\n\r\nconst hideError = () => {\r\n  return false;\r\n};\r\n\r\n// reducers\r\nconst contacts = createReducer([], {\r\n  [phonebookActions.fetchContactsSuccess]: (state, action) => action.payload,\r\n  [phonebookActions.addContactSuccess]: addContact,\r\n  [phonebookActions.deleteContactSuccess]: deleteContact,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [phonebookActions.changeFilter]: changeFilter,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [phonebookActions.fetchContactsRequest]: () => true,\r\n  [phonebookActions.fetchContactsSuccess]: () => false,\r\n  [phonebookActions.fetchContactsError]: () => false,\r\n  [phonebookActions.addContactRequest]: () => true,\r\n  [phonebookActions.addContactSuccess]: () => false,\r\n  [phonebookActions.addContactError]: () => false,\r\n  [phonebookActions.removeContactRequest]: () => true,\r\n  [phonebookActions.removeContactSuccess]: () => false,\r\n  [phonebookActions.removeContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(false, {\r\n  [phonebookActions.addContactError]: () => true,\r\n  [phonebookActions.hideError]: hideError,\r\n});\r\n\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n  loading,\r\n  error\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport phonebookReducer from './phonebook/phonebookReducer';\r\nimport authReducer from './auth/authReducer';\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    phonebook: phonebookReducer,\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n  },\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nexport const persistor = persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport App from './components/App';\nimport { store, persistor } from './redux/store';\n\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>\n  , document.getElementById('root')\n);\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContactRequest = createAction('phonebook/addRequest');\r\nconst addContactSuccess = createAction('phonebook/addSuccess');\r\nconst addContactError = createAction('phonebook/addError');\r\n\r\nconst fetchContactsRequest = createAction('phonebook/fetchRequest');\r\nconst fetchContactsSuccess = createAction('phonebook/fetchSuccess');\r\nconst fetchContactsError = createAction('phonebook/fetchError');\r\n\r\nconst deleteContactRequest = createAction('phonebook/deleteRequest');\r\nconst deleteContactSuccess = createAction('phonebook/deleteSuccess');\r\nconst deleteContactError = createAction('phonebook/deleteError');\r\n\r\nconst changeFilter = createAction('phonebook/filter');\r\n\r\nconst hideError = createAction('phonebook/error');\r\n\r\n\r\nexport default {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n  hideError\r\n};","import axios from 'axios';\r\n\r\nimport token from '../../utils/token';\r\nimport authActions from './authActions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst register = credentials => dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  axios\r\n    .post('/users/signup', credentials)\r\n    .then(response => {\r\n      token.set(response.data.token);\r\n      dispatch(authActions.registerSuccess(response.data));\r\n    })\r\n    .catch(error => dispatch(authActions.registerError(error)));\r\n};\r\n\r\nconst logIn = credentials => dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  axios\r\n    .post('/users/login', credentials)\r\n    .then(response => {\r\n      token.set(response.data.token);\r\n      dispatch(authActions.loginSuccess(response.data));\r\n    })\r\n    .catch(error => dispatch(authActions.loginError(error)));\r\n};\r\n\r\nconst getCurrentUser = () => (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  axios\r\n    .get('/users/current')\r\n    .then(({ data }) => dispatch(authActions.getCurrentUserSuccess(data)))\r\n    .catch(error => authActions.getCurrentUserError(error));\r\n};\r\n\r\nconst logOut = () => dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  axios\r\n    .post('/users/logout')\r\n    .then(() => {\r\n      token.unset();\r\n      dispatch(authActions.logoutSuccess());\r\n    })\r\n    .catch(error => dispatch(authActions.logoutError(error)));\r\n};\r\n\r\nexport default { register, logOut, logIn, getCurrentUser };","const isAuthenticated = state => state.auth.token;\r\n\r\nconst getUserName = state => state.auth.user.name;\r\n\r\nconst getUserEmail = state => state.auth.user.email;\r\n\r\nconst getError = state => state.auth.error;\r\n\r\nexport default { isAuthenticated, getUserName, getUserEmail, getError };","import axios from 'axios';\r\n\r\nexport default {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './authActions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: (_, { payload }) => payload,\r\n  [authActions.loginError]: (_, { payload }) => payload,\r\n  [authActions.logoutError]: (_, { payload }) => payload,\r\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\r\n  [authActions.clearError]: () => null,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n});","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <CircularProgress />\r\n  )\r\n};\r\n\r\nexport default Spinner;","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nconst clearError = createAction('phonebook/error');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n  clearError\r\n};"],"sourceRoot":""}